{"version":3,"sources":["components/Search/Search.module.scss","components/Search/Search.js","components/Card/CardDetails.js","components/Card/Card.js","components/Pagination/Pagination.js","components/Filter/FilterBTN.js","components/Filter/category/Gender.js","components/Filter/category/Species.js","components/Filter/category/Status.js","components/Filter/Filter.js","components/Navbar/NavBar.js","components/Filter/category/InputGroup.js","pages/Episodes.js","pages/Location.js","App.js","reportWebVitals.js","index.js","components/Card/Card.module.scss"],"names":["module","exports","Search","setSearch","setPageNumber","className","styles","search","onChange","e","target","value","placeholder","input","type","onClick","preventDefault","btn","CardDetails","id","useParams","useState","fetchedData","updateFetchedData","name","location","origin","gender","image","status","species","api","useEffect","a","fetch","then","res","json","data","src","alt","Card","display","page","results","map","x","style","textDecoration","to","card","img","content","badge","Pagination","pageNumber","info","window","innerWidth","width","setWidth","setDimensions","addEventListener","removeEventListener","jsx","forcePage","marginPagesDisplayed","pageRangeDisplayed","pageCount","pages","onPageChange","selected","nextLabel","previousLabel","previousClassName","nextClassName","activeClassName","pageClassName","pageLinkClassName","FilterBTN","task","index","for","Gender","setGender","items","Species","setSpecies","item","Status","setStatus","Filter","cursor","reload","NavBar","class","InputGroup","changeID","total","Array","keys","ind","Episodes","setResults","setInfo","air_date","episode","setID","Promise","all","characters","Location","dimension","number","setNumber","residents","Home","updatePageNumber","updateStatus","updateGender","updateSpecies","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51a4d671.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Search_input__3iTQH\",\"btn\":\"Search_btn__VNvBO\"};","import React from \"react\";\nimport styles from \"./Search.module.scss\";\n\nconst Search = ({ setSearch, setPageNumber }) => {\n  let searchBtn = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <form\n      className={`${styles.search} d-flex flex-sm-row flex-column align-items-center justify-content-center gap-4 mb-5`}\n    >\n      <input\n        onChange={(e) => {\n          setPageNumber(1);\n          setSearch(e.target.value);\n        }}\n        placeholder=\"Search for characters\"\n        className={styles.input}\n        type=\"text\"\n      />\n      <button\n        onClick={searchBtn}\n        className={`${styles.btn} btn btn-primary fs-5`}\n      >\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default Search;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst CardDetails = () => {\n  let { id } = useParams();\n\n  let [fetchedData, updateFetchedData] = useState([]);\n  let { name, location, origin, gender, image, status, species } = fetchedData;\n\n  let api = `https://rickandmortyapi.com/api/character/${id}`;\n\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json());\n      updateFetchedData(data);\n    })();\n  }, [api]);\n\n  return (\n    <div className=\"container d-flex justify-content-center mb-5\">\n      <div className=\"d-flex flex-column gap-3\">\n        <h1 className=\"text-center\">{name}</h1>\n\n        <img className=\"img-fluid\" src={image} alt=\"\" />\n        {(() => {\n          if (status === \"Dead\") {\n            return <div className=\"badge bg-danger fs-5\">{status}</div>;\n          } else if (status === \"Alive\") {\n            return <div className=\" badge bg-success fs-5\">{status}</div>;\n          } else {\n            return <div className=\"badge bg-secondary fs-5\">{status}</div>;\n          }\n        })()}\n        <div className=\"content\">\n          <div className=\"\">\n            <span className=\"fw-bold\">Gender : </span>\n            {gender}\n          </div>\n          <div className=\"\">\n            <span className=\"fw-bold\">Location: </span>\n            {location?.name}\n          </div>\n          <div className=\"\">\n            <span className=\"fw-bold\">Origin: </span>\n            {origin?.name}\n          </div>\n          <div className=\"\">\n            <span className=\"fw-bold\">Species: </span>\n            {species}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CardDetails;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Card.module.scss\";\nimport CardDetails from \"./CardDetails\";\n\nconst Card = ({ page, results }) => {\n  let display;\n\n  if (results) {\n    display = results.map((x) => {\n      let { id, image, name, status, location } = x;\n\n      return (\n        <Link\n          style={{ textDecoration: \"none\" }}\n          to={`${page}${id}`}\n          key={id}\n          className=\"col-lg-4 col-md-6 col-sm-6 col-12 mb-4 position-relative text-dark\"\n        >\n          <div\n            className={`${styles.card} d-flex flex-column justify-content-center`}\n          >\n            <img className={`${styles.img} img-fluid`} src={image} alt=\"\" />\n            <div className={`${styles.content}`}>\n              <div className=\"fs-5 fw-bold mb-4\">{name}</div>\n              <div className=\"\">\n                <div className=\"fs-6 fw-normal\">Last Location</div>\n                <div className=\"fs-5\">{location.name}</div>\n              </div>\n            </div>\n          </div>\n\n          {(() => {\n            if (status === \"Dead\") {\n              return (\n                <div\n                  className={`${styles.badge} position-absolute badge bg-danger`}\n                >\n                  {status}\n                </div>\n              );\n            } else if (status === \"Alive\") {\n              return (\n                <div\n                  className={`${styles.badge} position-absolute badge bg-success`}\n                >\n                  {status}\n                </div>\n              );\n            } else {\n              return (\n                <div\n                  className={`${styles.badge} position-absolute badge bg-secondary`}\n                >\n                  {status}\n                </div>\n              );\n            }\n          })()}\n        </Link>\n      );\n    });\n  } else {\n    display = \"No Characters Found :/\";\n  }\n\n  return <>{display}</>;\n};\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport ReactPaginate from \"react-paginate\";\n\nconst Pagination = ({ pageNumber, info, setPageNumber }) => {\n  let pageChange = (data) => {\n    setPageNumber(data.selected + 1);\n  };\n\n  const [width, setWidth] = useState(window.innerWidth);\n  const setDimensions = () => {\n    setWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", setDimensions);\n    return () => window.removeEventListener(\"resize\", setDimensions);\n  }, []);\n\n  return (\n    <>\n      <style jsx>\n        {`\n          @media (max-width: 768px) {\n            .pagination {\n              font-size: 12px;\n            }\n            .next,\n            .prev {\n              display: none;\n            }\n          }\n          @media (max-width: 768px) {\n            .pagination {\n              font-size: 14px;\n            }\n          }\n        `}\n      </style>\n      <ReactPaginate\n        forcePage={pageNumber === 1 ? 0 : pageNumber - 1}\n        marginPagesDisplayed={width < 576 ? 1 : 2}\n        pageRangeDisplayed={width < 576 ? 1 : 2}\n        pageCount={info?.pages}\n        onPageChange={pageChange}\n        className=\"pagination justify-content-center my-4 gap-4\"\n        nextLabel=\"Next\"\n        previousLabel=\"Prev\"\n        previousClassName=\"btn btn-primary fs-5 prev\"\n        nextClassName=\"btn btn-primary fs-5 next\"\n        activeClassName=\"active\"\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n      />\n    </>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nconst FilterBTN = ({ input, task, setPageNumber, index, name }) => {\n  return (\n    <div>\n      <style jsx>\n        {`\n          .x:checked + label {\n            background-color: #0b5ed7;\n            color: white;\n          }\n          input[type=\"radio\"] {\n            display: none;\n          }\n        `}\n      </style>\n      <div className=\"form-check\">\n        <input\n          className=\"form-check-input x\"\n          type=\"radio\"\n          name={name}\n          id={`${name}-${index}`}\n        />\n        <label\n          onClick={(x) => {\n            task(input);\n            setPageNumber(1);\n          }}\n          className=\"btn btn-outline-primary\"\n          for={`${name}-${index}`}\n        >\n          {input}\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterBTN;\n","import FilterBTN from \"../FilterBTN\";\n\nconst Gender = ({ setGender, setPageNumber }) => {\n  let genders = [\"female\", \"male\", \"genderless\", \"unknown\"];\n  return (\n    <div className=\"accordion-item\">\n      <h2 className=\"accordion-header\" id=\"headingThree\">\n        <button\n          className=\"accordion-button collapsed\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#collapseThree\"\n          aria-expanded=\"false\"\n          aria-controls=\"collapseThree\"\n        >\n          Gender\n        </button>\n      </h2>\n      <div\n        id=\"collapseThree\"\n        className=\"accordion-collapse collapse\"\n        aria-labelledby=\"headingThree\"\n        data-bs-parent=\"#accordionExample\"\n      >\n        <div className=\"accordion-body d-flex flex-wrap gap-3\">\n          {genders.map((items, index) => {\n            return (\n              <FilterBTN\n                name=\"gender\"\n                index={index}\n                key={index}\n                task={setGender}\n                setPageNumber={setPageNumber}\n                input={items}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Gender;\n","import React from \"react\";\nimport FilterBTN from \"../FilterBTN\";\n\nconst Species = ({ setSpecies, setPageNumber }) => {\n  let species = [\n    \"Human\",\n    \"Alien\",\n    \"Humanoid\",\n    \"Poopybutthole\",\n    \"Mythological\",\n    \"Unknown\",\n    \"Animal\",\n    \"Disease\",\n    \"Robot\",\n    \"Cronenberg\",\n    \"Planet\",\n  ];\n  return (\n    <div className=\"accordion-item \">\n      <h2 className=\"accordion-header\" id=\"headingTwo\">\n        <button\n          className=\"accordion-button collapsed\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#collapseTwo\"\n          aria-expanded=\"false\"\n          aria-controls=\"collapseTwo\"\n        >\n          Species\n        </button>\n      </h2>\n      <div\n        id=\"collapseTwo\"\n        className=\"accordion-collapse collapse\"\n        aria-labelledby=\"headingTwo\"\n        data-bs-parent=\"#accordionExample\"\n      >\n        <div className=\"accordion-body d-flex flex-wrap gap-3\">\n          {species.map((item, index) => {\n            return (\n              <FilterBTN\n                name=\"species\"\n                index={index}\n                key={index}\n                task={setSpecies}\n                setPageNumber={setPageNumber}\n                input={item}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Species;\n","import React from \"react\";\nimport FilterBTN from \"../FilterBTN\";\n\nconst Status = ({ setStatus, setPageNumber }) => {\n  let status = [\"Alive\", \"Dead\", \"Unknown\"];\n  return (\n    <div className=\"accordion-item\">\n      <h2 className=\"accordion-header\" id=\"headingOne\">\n        <button\n          className=\"accordion-button\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#collapseOne\"\n          aria-expanded=\"true\"\n          aria-controls=\"collapseOne\"\n        >\n          Status\n        </button>\n      </h2>\n      <div\n        id=\"collapseOne\"\n        className=\"accordion-collapse collapse show\"\n        aria-labelledby=\"headingOne\"\n        data-bs-parent=\"#accordionExample\"\n      >\n        <div className=\"accordion-body d-flex flex-wrap gap-3\">\n          {status.map((item, index) => (\n            <FilterBTN\n              key={index}\n              index={index}\n              name=\"status\"\n              task={setStatus}\n              setPageNumber={setPageNumber}\n              input={item}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Status;\n","import React from \"react\";\nimport Gender from \"./category/Gender\";\nimport Species from \"./category/Species\";\nimport Status from \"./category/Status\";\n\nconst Filter = ({\n  pageNumber,\n  setPageNumber,\n  setStatus,\n  setGender,\n  setSpecies,\n}) => {\n  let clear = () => {\n    setStatus(\"\");\n    setGender(\"\");\n    setSpecies(\"\");\n    setPageNumber(1);\n    window.location.reload(false);\n  };\n\n  return (\n    <div className=\"col-lg-3 col-12 mb-5\">\n      <div className=\"text-center fw-bold fs-4 mb-2\">Filters</div>\n      <div\n        style={{ cursor: \"pointer\" }}\n        onClick={clear}\n        className=\"text-primary text-decoration-underline text-center mb-3\"\n      >\n        Clear Filters\n      </div>\n      <div className=\"accordion\" id=\"accordionExample\">\n        <Status setPageNumber={setPageNumber} setStatus={setStatus} />\n        <Species setPageNumber={setPageNumber} setSpecies={setSpecies} />\n        <Gender setPageNumber={setPageNumber} setGender={setGender} />\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nimport { NavLink, Link } from \"react-router-dom\";\nimport \"../../App.scss\";\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-4\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand fs-3 ubuntu\">\n          Rick & Morty <span className=\"text-primary\">WiKi</span>\n        </Link>\n        <style jsx>{`\n          button[aria-expanded=\"false\"] > .close {\n            display: none;\n          }\n          button[aria-expanded=\"true\"] > .open {\n            display: none;\n          }\n        `}</style>\n        <button\n          className=\"navbar-toggler border-0\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNavAltMarkup\"\n          aria-controls=\"navbarNavAltMarkup\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"fas fa-bars open text-dark\"></span>\n          <span class=\"fas fa-times close text-dark\"></span>\n        </button>\n        <div\n          className=\"collapse navbar-collapse justify-content-end\"\n          id=\"navbarNavAltMarkup\"\n        >\n          <div className=\"navbar-nav fs-5\">\n            <NavLink to=\"/\" className=\"nav-link\">\n              Characters\n            </NavLink>\n            <NavLink to=\"/episodes\" className=\"nav-link\">\n              Episode\n            </NavLink>\n            <NavLink\n              activeClassName=\"active\"\n              className=\"nav-link\"\n              to=\"/location\"\n            >\n              Location\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst InputGroup = ({ name, changeID, total }) => {\n  return (\n    <div className=\"input-group mb-3\">\n      <select\n        onChange={(e) => changeID(e.target.value)}\n        className=\"form-select\"\n        id={name}\n      >\n        <option value=\"1\">Choose...</option>\n        {[...Array(total).keys()].map((x, ind) => {\n          return (\n            <option value={x + 1}>\n              {name} - {x + 1}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n};\n\nexport default InputGroup;\n","import React, { useState, useEffect } from \"react\";\n\nimport Card from \"../components/Card/Card\";\nimport InputGroup from \"../components/Filter/category/InputGroup\";\n\nconst Episodes = () => {\n  let [results, setResults] = useState([]);\n  let [info, setInfo] = useState([]);\n  let { air_date, episode, name } = info;\n  let [id, setID] = useState(1);\n\n  let api = `https://rickandmortyapi.com/api/episode/${id}`;\n\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json());\n      setInfo(data);\n\n      let a = await Promise.all(\n        data.characters.map((x) => {\n          return fetch(x).then((res) => res.json());\n        })\n      );\n      setResults(a);\n    })();\n  }, [api]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mb-3\">\n        <h1 className=\"text-center mb-3\">\n          Episode name :{\" \"}\n          <span className=\"text-primary\">{name === \"\" ? \"Unknown\" : name}</span>\n        </h1>\n        <h5 className=\"text-center\">\n          Air Date: {air_date === \"\" ? \"Unknown\" : air_date}\n        </h5>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-3 col-12 mb-4\">\n          <h4 className=\"text-center mb-4\">Pick Episode</h4>\n          <InputGroup name=\"Episode\" changeID={setID} total={51} />\n        </div>\n        <div className=\"col-lg-8 col-12\">\n          <div className=\"row\">\n            <Card page=\"/episodes/\" results={results} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Episodes;\n","import React, { useState, useEffect } from \"react\";\n\nimport Card from \"../components/Card/Card\";\nimport InputGroup from \"../components/Filter/category/InputGroup\";\n\nconst Location = () => {\n  let [results, setResults] = useState([]);\n  let [info, setInfo] = useState([]);\n  let { dimension, type, name } = info;\n  let [number, setNumber] = useState(1);\n\n  let api = `https://rickandmortyapi.com/api/location/${number}`;\n\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json());\n      setInfo(data);\n\n      let a = await Promise.all(\n        data.residents.map((x) => {\n          return fetch(x).then((res) => res.json());\n        })\n      );\n      setResults(a);\n    })();\n  }, [api]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mb-3\">\n        <h1 className=\"text-center mb-3\">\n          Location :\n          <span className=\"text-primary\">\n            {\" \"}\n            {name === \"\" ? \"Unknown\" : name}\n          </span>\n        </h1>\n        <h5 className=\"text-center\">\n          Dimension: {dimension === \"\" ? \"unknown\" : dimension}\n        </h5>\n        <h6 className=\"text-center\">Type : {type === \"\" ? \"Unknown\" : type}</h6>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-3 col-12 mb-4\">\n          <h4 className=\"text-center mb-4\">Pick Location</h4>\n          <InputGroup name=\"Location\" changeID={setNumber} total={126} />\n        </div>\n        <div className=\"col-lg-8 col-12\">\n          <div className=\"row\">\n            <Card page=\"/location/\" results={results} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Location;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport React, { useState, useEffect } from \"react\";\n\nimport Search from \"./components/Search/Search\";\nimport Card from \"./components/Card/Card\";\nimport Pagination from \"./components/Pagination/Pagination\";\nimport Filter from \"./components/Filter/Filter\";\nimport NavBar from \"./components/Navbar/NavBar\";\n\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Episodes from \"./pages/Episodes\";\nimport Location from \"./pages/Location\";\nimport CardDetails from \"./components/Card/CardDetails\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n      </div>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/:id\" element={<CardDetails />} />\n\n        <Route path=\"/episodes\" element={<Episodes />} />\n        <Route path=\"/episodes/:id\" element={<CardDetails />} />\n\n        <Route path=\"/location\" element={<Location />} />\n        <Route path=\"/location/:id\" element={<CardDetails />} />\n      </Routes>\n    </Router>\n  );\n}\n\nconst Home = () => {\n  let [pageNumber, updatePageNumber] = useState(1);\n  let [status, updateStatus] = useState(\"\");\n  let [gender, updateGender] = useState(\"\");\n  let [species, updateSpecies] = useState(\"\");\n  let [fetchedData, updateFetchedData] = useState([]);\n  let [search, setSearch] = useState(\"\");\n  let { info, results } = fetchedData;\n\n  let api = `https://rickandmortyapi.com/api/character/?page=${pageNumber}&name=${search}&status=${status}&gender=${gender}&species=${species}`;\n\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json());\n      updateFetchedData(data);\n    })();\n  }, [api]);\n  return (\n    <div className=\"App\">\n      <h1 className=\"text-center mb-3\">Characters</h1>\n      <Search setSearch={setSearch} updatePageNumber={updatePageNumber} />\n      <div className=\"container\">\n        <div className=\"row\">\n          <Filter\n            pageNumber={pageNumber}\n            status={status}\n            updateStatus={updateStatus}\n            updateGender={updateGender}\n            updateSpecies={updateSpecies}\n            updatePageNumber={updatePageNumber}\n          />\n          <div className=\"col-lg-8 col-12\">\n            <div className=\"row\">\n              <Card page=\"/\" results={results} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <Pagination\n        info={info}\n        pageNumber={pageNumber}\n        updatePageNumber={updatePageNumber}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__35wN0\",\"content\":\"Card_content__1AEDp\",\"img\":\"Card_img__1qgJC\",\"badge\":\"Card_badge__21uzr\"};"],"sourceRoot":""}